{"version":3,"sources":["components/header/MyNavbar.js","components/header/Header.js","helpers/helpers.js","components/product/ProductCard.js","components/Loader.js","components/ProductContext.js","components/useInfiniteScroll.js","components/main/SortSection.js","components/product/Products.js","components/main/Main.js","components/App.js"],"names":["HeaderNav","withRouter","props","location","Fragment","Navbar","expand","fixed","className","Brand","href","Collapse","id","Nav","activeKey","pathname","Link","Toggle","aria-controls","Header","src","alt","formatDateRelative","pdate","value","now","Date","productDate","getDate","date","apiDate","days","toLocaleDateString","day","month","year","convertTorelative","hours","getHours","minutes","seconds","convertTorelativeToday","ProductCard","React","forwardRef","ref","style","fontSize","size","face","cent","converted","toFixed","centsToDollars","price","Loader","ProductContext","createContext","ProductContextProvider","useState","products","setProducts","sort","setSort","loading","setLoading","page","setPage","dataOnIdle","setDataOnIdle","catalogueEnd","setCatalogueEnd","emptyreturn","setEmptyReturn","datafetchedOnIdle","setDataFetchedOnIdle","advertStatus","setAdvertStatus","scrollStatus","setScrollStatus","idleTimerRef","useRef","fetchData","startPage","format","url","fetch","getNextData","a","console","log","length","pagefrom","sorted","response","json","data","activeScrolling","setloading","prevState","_","uniqBy","Provider","addNewDataOnScroll","fetchedWhenIdle","onIdle","timeout","children","useInfiniteScroll","callback","loadMoreFetching","setLoadMoreFetching","productLoaded","setproductLoaded","useEffect","handleScroll","scroll","catalogue","lastCardOffset","document","body","offsetHeight","window","innerHeight","scrollY","getElementsByClassName","SortSection","useContext","data-aos","Form","Group","controlId","Label","Control","onChange","changeEvent","as","Products","pg_wrapcard","parent_wrap","callScroll","addEventListener","removeEventListener","useLayoutEffect","text","Math","floor","random","pgCards","Array","from","pgLength","j","forEach","e","i","nextSibling","classList","contains","insertAdjacentHTML","fetchProd","load","loadProducts","map","item","index","key","target","Main","App","AOS","init","once","to"],"mappings":"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","file":"static/js/4.ea915675.chunk.js","sourcesContent":["import React from 'react';\nimport {Navbar, Nav} from 'react-bootstrap';\nimport { withRouter } from \"react-router\";\n\nconst MyNavbar = props => {\n    const {location} = props\n\n    return(\n        <React.Fragment>\n            <Navbar expand=\"lg\" fixed=\"top\" className=\"shadow pg-light pr-5 pl-5\">\n                <Navbar.Brand href=\"#home\"><span className=\"logo\">{\"PG):\"}</span></Navbar.Brand>\n                <Navbar.Collapse id=\"basic-navbar-nav\" className=\"justify-content-end\">      \n                    <Nav activeKey={location.pathname}>\n                        <Nav.Link href=\"/\">Home</Nav.Link>\n                        <Nav.Link href=\"#\">Product</Nav.Link>\n                        <Nav.Link href=\"#\">About</Nav.Link>\n                        <Nav.Link href=\"#\">Contact Us</Nav.Link>\n                        <Nav.Link href=\"#\">Login/SignUp</Nav.Link>\n                    </Nav>\n                </Navbar.Collapse>\n                <div className=\"pg-mobile__toggle\">\n                    <Nav.Link href=\"#\" className=\"cart\">\n                        <span className=\"cart-ind\">0</span>\n                        <i className=\"fas fa-shopping-basket\"></i>\n                    </Nav.Link>\n                    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                </div>\n            </Navbar>\n        </React.Fragment>\n    )\n}\n\nconst HeaderNav = withRouter(MyNavbar);\n\nexport default HeaderNav;","import React from 'react';\nimport MyNavbar from './MyNavbar';\n\nconst Header = props => {\n\n    return (\n        <React.Fragment>\n            <header>\n                <MyNavbar />\n                <div className=\"banner\">\n                    <div className=\"header-content container\">\n                        <h1>{\"Welcome to (ノ・∀・)ノ face store\"}</h1>\n                        <p>We sell at affordable prices, 30% off your first purchase</p>\n                        <img src=\"./img/down.svg\" alt=\"load\" className=\"down\" />\n                    </div>\n                </div>\n            </header>\n        </React.Fragment>\n    )\n}\n\nexport default Header;","'use strict';\n\nexport function centsToDollars (cent) {\n    let converted = (cent/100).toFixed(2);\n\n    return `$${converted}`\n}\n\nexport function formatDateRelative(pdate) {\n    let now = new Date();\n    let productDate = new Date(pdate);\n    let value;\n\n    if (now.getDate() > productDate.getDate()) {\n        value = convertTorelative(pdate)\n        // console.log(value);\n    }\n\n    if(now.getDate() === productDate.getDate()) {\n        value = convertTorelativeToday(pdate)\n        // console.log(value);\n    }\n\n    return value;\n}\n\nfunction convertTorelative (date) {\n    let now = new Date();\n    let apiDate = new Date(date);\n\n    let days = now.getDate() - apiDate.getDate()\n\n    if (days <= 7) {\n        return (\n            days === 1 ? `${days} day ago` : `${days} days ago`\n        );\n    }else{\n        return (\n            apiDate.toLocaleDateString('en-GB', {  \n                day : 'numeric',\n                month : 'short',\n                year : 'numeric'\n            })\n        );\n    }\n}\n\nfunction convertTorelativeToday (date) {\n    let now = new Date();\n    let apiDate = new Date(date);\n    let hours = now.getHours() - apiDate.getHours();\n    let minutes = now.getHours() - apiDate.getHours();\n    let seconds = now.getHours() - apiDate.getHours();\n\n\n    if(hours >= 1) {\n        return ( hours === 1 ? `${hours} hour ago` : `${hours} hours ago` );\n    }else{\n        if(minutes > 0) {\n            return ( minutes === 1 ? `${minutes} minute ago` : `${minutes} minutes ago`);\n        }else{\n            return ( seconds === 1 ? `${seconds} seconds ago` : `${seconds} seconds ago`);\n        }\n    }\n\n    \n}","import React from 'react';\nimport {centsToDollars, formatDateRelative} from '../../helpers/helpers'\n\nconst ProductCard = React.forwardRef((props, ref) => {\n\n    return(\n        <React.Fragment>\n            <div className=\"pg-card shadow\" ref={ref}>\n                <div className=\"ascii-face\">\n                    <p style={{fontSize: props.size+\"px\"}} className=\"text-center face font-weight-bold\">{props.face}</p>\n                </div>\n                <div className=\"pg-card__desc\">\n                    <p><span>{props.size}px</span></p>\n                    <p className=\"font-weight-bold\"><span>{centsToDollars(props.price)}</span></p>\n                    <p><span>{formatDateRelative(props.date)}</span></p>\n                    <button className=\"btn cart-btn\">\n                        <i className=\"fas fa-cart-plus\"></i> &nbsp; Add To Cart\n                    </button>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n})\n\nexport default ProductCard;","import React from 'react';\n\nconst Loader = props => {\n\n    return(\n        <React.Fragment>\n            <div>\n                <div>\n                    <img src=\"./img/loader.svg\" className=\"img-fluid d-block mb-0 mx-auto\" alt=\"Product Loader while getting products\"/>\n                    <p className=\"text-center\">Loading...</p>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default Loader","import React, {useState, createContext, useRef} from 'react';\nimport IdleTimer from 'react-idle-timer';\nimport _ from 'lodash';\n\nconst ProductContext = createContext();\n\n\nconst ProductContextProvider = (props) => {\n    const [products, setProducts] = useState([]);\n    const [sort, setSort] = useState('id');\n    const [loading, setLoading] = useState(false);\n    const [page, setPage] = useState(1);\n    const [dataOnIdle, setDataOnIdle] = useState([]);\n    const [catalogueEnd, setCatalogueEnd] = useState(false);\n    const [emptyreturn, setEmptyReturn] = useState('');\n    const [datafetchedOnIdle, setDataFetchedOnIdle] = useState(false);\n    const [advertStatus, setAdvertStatus] = useState(false);\n    const [scrollStatus, setScrollStatus] = useState(false);\n\n\n    const idleTimerRef = useRef(null);\n\n    //fetch product from api\n    const fetchData = (startPage, format) => {\n        setAdvertStatus(false)\n        const url = `http://localhost:3000/api/products?_page=${startPage}&_limit=15&_sort=${format}`\n\n        return fetch(url);\n    }\n\n    //function to fetch data when user is idle\n    const getNextData = async () => {\n            console.log(\"i am now idle\")\n                try{\n                    if (!catalogueEnd) {\n                        if (dataOnIdle.length < 1) {     \n                            let pagefrom = page + 1, sorted = sort;\n                            let response = await fetchData(pagefrom, sorted)\n                            \n                            let data = await response.json();\n                            if (data.length > 0) {\n                                setDataOnIdle(data)\n                                setPage(pagefrom)\n                                setDataFetchedOnIdle(true)\n                            }else{\n                            setEmptyReturn('Data is empty')\n                            setDataFetchedOnIdle(true)\n                            }\n                        }else{\n                            return\n                        }\n                    }\n                }catch(e){\n                    console.log(e)\n                }\n\n    }\n\n    //function to run if next data as been fetched when user is idle\n    const fetchedWhenIdle = (setloading) => {\n        if(dataOnIdle.length >= 1) {\n                setProducts(prevState => _.uniqBy([...prevState, ...dataOnIdle], 'id'))\n                setDataOnIdle([])\n                setDataFetchedOnIdle(false); \n            setAdvertStatus(true)\n            setloading(false);\n        }else if(emptyreturn === 'Data is empty'){\n            setCatalogueEnd(true)\n            setDataFetchedOnIdle(false); \n            setloading(false);\n        }\n    }\n\n    //function to run if next data as fetch when user is actively scrolling\n    const activeScrolling = async (setloading) => {\n        try{\n            if (!catalogueEnd) {\n                let pagefrom = page + 1, sorted = sort;\n                let response = await fetchData(pagefrom, sorted)\n                \n                let data = await response.json();\n                if (data.length > 0) {\n                    setProducts(prevState => _.uniqBy([...prevState, ...data], 'id')) \n                    setPage(pagefrom)\n                    setloading(false)\n                    setAdvertStatus(true)\n                }else{\n                   setCatalogueEnd(true) \n                   setloading(false)\n                }\n            }\n        }catch(e){\n            console.log(e)\n        }\n    }\n\n    //function onscroll when user reach end of page\n    const addNewDataOnScroll = (setloading) => {\n        if (datafetchedOnIdle === true) {\n            fetchedWhenIdle(setloading);\n        }else{\n            activeScrolling(setloading);\n        }\n    }\n  \n    return (\n        <ProductContext.Provider value={{products, setProducts, setLoading, sort, setSort, setPage, loading, addNewDataOnScroll, catalogueEnd, setCatalogueEnd, advertStatus, setAdvertStatus, fetchData, page, setDataOnIdle, scrollStatus, setScrollStatus, datafetchedOnIdle, setDataFetchedOnIdle}} >\n            <IdleTimer \n                ref={idleTimerRef}\n                onIdle={getNextData}\n                timeout={5 * 1000}\n            >\n                {props.children}\n            </IdleTimer>\n        </ProductContext.Provider>\n    )\n}\n\nexport {ProductContext, ProductContextProvider};","import React, {useState, useEffect} from 'react'\n\nconst useInfiniteScroll = (callback) => {\n    const [loadMoreFetching, setLoadMoreFetching] = useState(false);\n    const [productLoaded, setproductLoaded] = useState(false);\n  \n    useEffect(() => {\n        if (loadMoreFetching) {\n            callback(); \n        }\n    }, [loadMoreFetching]);\n  \n    const handleScroll = (scroll, catalogue) => {\n        if (scroll) {\n\n            let lastCardOffset = document.body.offsetHeight;\n\n            let pageOffset = window.innerHeight + window.scrollY;\n\n            if (pageOffset >= lastCardOffset){\n                if (document.getElementsByClassName('pg-card')) {\n                    if (!catalogue) {\n                        setLoadMoreFetching(true);  \n                    }else{\n                        setLoadMoreFetching(false);\n                    }\n                }\n            }\n            else{\n                return;\n            }\n        }\n    }\n  \n    return {loadMoreFetching, setLoadMoreFetching, productLoaded, setproductLoaded, handleScroll};\n  };\n  \n  export default useInfiniteScroll;\n  ","import React, {useContext} from 'react';\nimport {Form} from 'react-bootstrap';\nimport {ProductContext} from '../ProductContext'\n\nconst SortSection = props => {\n    const {sort} = useContext(ProductContext)\n\n    return(\n        <React.Fragment>\n            <div className=\"d-flex flex-wrap justify-content-between mt-5\" data-aos=\"fade-up\">\n                <h2>Products</h2>\n                <div>\n                        <Form.Group controlId=\"sort-data\" className=\"d-flex\">\n                            <Form.Label className=\"mr-3 mt-2\" >Sort</Form.Label>\n                            <Form.Control onChange={props.changeEvent} as=\"select\" value={sort} >\n                                <option value=\"size\">size</option>\n                                <option value=\"price\">price</option>\n                                <option value=\"id\">id</option>\n                            </Form.Control>\n                        </Form.Group>\n                </div>\n            </div>\n        </React.Fragment>\n    )\n}\n\nexport default SortSection;","import React, {useEffect, useLayoutEffect, useContext, useRef} from 'react';\nimport ProductCard from './ProductCard';\nimport Loader from '../Loader';\nimport {ProductContext} from '../ProductContext'\nimport useInfiniteScroll from '../useInfiniteScroll';\nimport SortSection from '../main/SortSection'\n\nconst Products = props => {\n    const {loading, setLoading, products, setProducts, addNewDataOnScroll, catalogueEnd, setCatalogueEnd, advertStatus, setAdvertStatus, sort, page, fetchData, setSort, setDataOnIdle, setPage, scrollStatus, setScrollStatus,  datafetchedOnIdle, setDataFetchedOnIdle} = useContext(ProductContext);\n    \n    //callback passed to useInfiniteScroll callback\n    const fetchMoreListItems = () => {\n            addNewDataOnScroll(setLoadMoreFetching);\n    }\n\n    \n    //Setting Infinite scroll value\n    const {loadMoreFetching, setLoadMoreFetching, handleScroll} = useInfiniteScroll(fetchMoreListItems)\n\n    const pg_wrapcard = useRef();\n    const parent_wrap = useRef();\n\n    //window scroll function\n    const callScroll = () => {\n        handleScroll(scrollStatus, catalogueEnd)\n    }\n\n    //Load Ad function for getting ads\n    const loadAd = () => {\n        if (advertStatus) {\n            let text = `<div class=\"pg-card ad\"><p>But first, a word from our sponsors:</p><img class=\"adimg\" src=\"http://localhost:3000/ads/?r=${Math.floor(Math.random()*1000)}\"/></div>` \n            let pgCards = Array.from(document.getElementsByClassName('pg-card'));\n            if(pgCards.length > 0) {\n                const pgLength = pgCards.length / 20;\n                for (let j = 0; j < pgLength; j++) {\n                    if( j !== 0) {\n                        pgCards.forEach((e, i, a) => {\n                            if (a[i] === a[(20 * j) - 1]) {\n                                if (!e.nextSibling.classList.contains('ad')) {\n                                    e.insertAdjacentHTML('afterend', text);\n                                }\n                            }\n                        })\n                    } \n                }\n            } \n        }\n    }\n\n    //Mounting scroll listener to window\n    useEffect(() => {\n        window.addEventListener('scroll', callScroll);\n        return () => window.removeEventListener('scroll', callScroll);\n    }, [scrollStatus]);\n\n    //Mounting Ad feature function\n    useLayoutEffect(() => {\n        loadAd();\n     }, [advertStatus])\n     \n     //function to sort products\n     const sortProduct = (e) => {\n         setSort(e.target.value);\n         setPage(1)\n         setProducts([]);\n         setCatalogueEnd(false)\n         setDataOnIdle([])\n         setDataFetchedOnIdle(false);\n         setLoadMoreFetching(false);\n         setAdvertStatus(false);\n         setScrollStatus(false);\n     }\n     \n     //function for the first data fetch\n     useEffect(() => {\n         const fetchProd = async () => {\n             try{\n                 setLoadMoreFetching(false);\n                 setLoading(true)\n                 setAdvertStatus(false)\n                 const response = await fetchData(page, sort);\n \n                 const data = await response.json()\n \n                 setProducts(data)\n                 setLoading(false)\n             }catch(e){\n                 console.log(e)\n                 return 'Something went wrong'\n             }\n             setScrollStatus(true)\n         }\n         fetchProd()\n     }, [sort])\n \n\n    const load = <Loader />\n\n    const loadProducts =  <div className=\"d-flex        flex-wrap justify-content-start\" ref={parent_wrap} id=\"pg-wrapcard\">\n    {\n      products.map((item, index) => {\n            if (index === (products.length - 1)) {\n                return <ProductCard key={item.id} face={item.face} size={item.size} price={item.price} date={item.date} ref={pg_wrapcard}/>\n            }else{\n                return <ProductCard key={item.id} face={item.face} size={item.size} price={item.price} date={item.date}/>\n            }\n      })\n    }\n    </div>\n\n    return(\n        <React.Fragment>\n            <div className=\"pg-sort\">\n                <SortSection changeEvent={sortProduct}/>\n            </div>\n           <div>\n               {\n                   loading? load : loadProducts\n               }\n           </div>\n            <div>              \n                {\n                    loadMoreFetching && !catalogueEnd && <div className=\"pt-4 d-block mx-auto pl-4\">\n                        Loading <img src=\"./img/more.svg\" alt=\"load more loader\"/>\n                    </div>\n                }\n            </div>\n            <p className=\"text-center\">{catalogueEnd && \"End of Catalogue\"}</p>\n        </React.Fragment>\n    )\n}\n\nexport default Products;","import React from 'react';\nimport Products from '../product/Products'\n\nconst Main = props => {\n\n    return (\n\n        <React.Fragment>\n            <main id=\"main\">\n                <div className=\"container\">\n                    <div>\n                        <Products />\n                    </div>\n                </div>\n            </main>\n        </React.Fragment>\n    )\n}\n\nexport default Main;","import React, {useEffect} from 'react';\nimport Header from './header/Header';\nimport Main from './main/Main';\nimport AOS from 'aos';\nimport '../../node_modules/aos/dist/aos.css';\nimport {ProductContextProvider} from './ProductContext';\nimport {Link} from 'react-router-dom';\n\nconst App = props => {\n  useEffect(() => {\n    AOS.init({\n      once:true\n    });\n  },[])\n\n  return (\n    <React.Fragment>\n      <ProductContextProvider>\n        <Link to=\"#main\" className=\"skip\">skip to content</Link>\n        <Header />\n        <Main />\n      </ProductContextProvider>\n    </React.Fragment>\n  )\n}\n\nexport default App;"],"sourceRoot":""}